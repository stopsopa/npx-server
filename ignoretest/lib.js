
// old version
// var ignoretool = function(){function e(e){return Array.isArray(e)?e:[e]}const t=/^\s+$/,r=/^\\!/,i=/^\\#/,s="/",n="undefined"!=typeof Symbol?Symbol.for("node-ignore"):"node-ignore",o=(e,t,r)=>Object.defineProperty(e,t,{value:r}),c=/([0-z])-([0-z])/g,a=[[/\\?\s+$/,e=>0===e.indexOf("\\")?" ":""],[/\\\s/g,()=>" "],[/[\\^$.|*+(){]/g,e=>`\\${e}`],[/\[([^\]/]*)($|\])/g,(e,t,r)=>"]"===r?`[${(e=>e.replace(c,(e,t,r)=>t.charCodeAt(0)<=r.charCodeAt(0)?e:""))(t)}]`:`\\${e}`],[/(?!\\)\?/g,()=>"[^/]"],[/^\//,()=>"^"],[/\//g,()=>"\\/"],[/^\^*\\\*\\\*\\\//,()=>"^(?:.*\\/)?"]],h=[[/^(?=[^^])/,function(){return/\/(?!$)/.test(this)?"^":"(?:^|\\/)"}],[/\\\/\\\*\\\*(?=\\\/|$)/g,(e,t,r)=>t+6<r.length?"(?:\\/[^\\/]+)*":"\\/.+"],[/(^|[^\\]+)\\\*(?=.+)/g,(e,t)=>`${t}[^\\/]*`],[/(\^|\\\/)?\\\*$/,(e,t)=>{return`${t?`${t}[^/]+`:"[^/]*"}(?=$|\\/$)`}],[/\\\\\\/g,()=>"\\"]],d=[...a,[/(?:[^*/])$/,e=>`${e}(?=$|\\/)`],...h],l=[...a,[/(?:[^*])$/,e=>`${e}(?=$|\\/$)`],...h],u={},_=e=>e&&"string"==typeof e&&!t.test(e)&&0!==e.indexOf("#"),f=(e,t)=>{const s=e;let n=!1;return 0===e.indexOf("!")&&(n=!0,e=e.substr(1)),{origin:s,pattern:e=e.replace(r,"!").replace(i,"#"),negative:n,regex:((e,t,r)=>{const i=u[e];if(i)return i;const s=(t?l:d).reduce((t,r)=>t.replace(r[0],r[1].bind(e)),e);return u[e]=r?new RegExp(s,"i"):new RegExp(s)})(e,n,t)}};class g{constructor({ignorecase:e=!0}={}){this._rules=[],this._ignorecase=e,o(this,n,!0),this._initCache()}_initCache(){this._cache={}}add(t){return this._added=!1,"string"==typeof t&&(t=t.split(/\r?\n/g)),e(t).forEach(this._addPattern,this),this._added&&this._initCache(),this}addPattern(e){return this.add(e)}_addPattern(e){if(e&&e[n])return this._rules=this._rules.concat(e._rules),void(this._added=!0);if(_(e)){const t=f(e,this._ignorecase);this._added=!0,this._rules.push(t)}}filter(t){return e(t).filter(e=>this._filter(e))}createFilter(){return e=>this._filter(e)}ignores(e){return!this._filter(e)}_filter(e,t){return!!e&&(e in this._cache?this._cache[e]:(t||(t=e.split(s)),t.pop(),this._cache[e]=t.length?this._filter(t.join(s)+s,t)&&this._test(e):this._test(e)))}_test(e){let t=0;return this._rules.forEach(r=>{t^r.negative||(t=r.negative^r.regex.test(e))}),!t}}if("undefined"!=typeof process&&(process.env&&process.env.IGNORE_TEST_WIN32||"win32"===process.platform)){const e=g.prototype._filter,t=e=>/^\\\\\?\\/.test(e)||/[^\x00-\x80]+/.test(e)?e:e.replace(/\\/g,"/");g.prototype._filter=function(r,i){return r=t(r),e.call(this,r,i)}}return e=>new g(e)}();

const ignoretool = (function () {

    const module = {};

    // just paste here compressed code vvv from: https://github.com/kaelzhang/node-ignore/blob/master/index.js
    // just paste here compressed code vvv after compression through: https://skalman.github.io/UglifyJS-online/
    // just paste here compressed code vvv

    function makeArray(e){return Array.isArray(e)?e:[e]}const REGEX_TEST_BLANK_LINE=/^\s+$/,REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION=/^\\!/,REGEX_REPLACE_LEADING_EXCAPED_HASH=/^\\#/,REGEX_SPLITALL_CRLF=/\r?\n/g,REGEX_TEST_INVALID_PATH=/^\.*\/|^\.+$/,SLASH="/",KEY_IGNORE="undefined"!=typeof Symbol?Symbol.for("node-ignore"):"node-ignore",define=(e,t,r)=>Object.defineProperty(e,t,{value:r}),REGEX_REGEXP_RANGE=/([0-z])-([0-z])/g,sanitizeRange=e=>e.replace(REGEX_REGEXP_RANGE,(e,t,r)=>t.charCodeAt(0)<=r.charCodeAt(0)?e:""),REPLACERS=[[/\\?\s+$/,e=>0===e.indexOf("\\")?" ":""],[/\\\s/g,()=>" "],[/[\\^$.|*+(){]/g,e=>`\\${e}`],[/\[([^\]/]*)($|\])/g,(e,t,r)=>"]"===r?`[${sanitizeRange(t)}]`:`\\${e}`],[/(?!\\)\?/g,()=>"[^/]"],[/^\//,()=>"^"],[/\//g,()=>"\\/"],[/^\^*\\\*\\\*\\\//,()=>"^(?:.*\\/)?"],[/(?:[^*])$/,e=>/\/$/.test(e)?`${e}$`:`${e}(?=$|\\/$)`],[/^(?=[^^])/,function(){return/\/(?!$)/.test(this)?"^":"(?:^|\\/)"}],[/\\\/\\\*\\\*(?=\\\/|$)/g,(e,t,r)=>t+6<r.length?"(?:\\/[^\\/]+)*":"\\/.+"],[/(^|[^\\]+)\\\*(?=.+)/g,(e,t)=>`${t}[^\\/]*`],[/(\^|\\\/)?\\\*$/,(e,t)=>{return`${t?`${t}[^/]+`:"[^/]*"}(?=$|\\/$)`}],[/\\\\\\/g,()=>"\\"]],regexCache=Object.create(null),makeRegex=(e,t,r)=>{const i=regexCache[e];if(i)return i;const n=REPLACERS.reduce((t,r)=>t.replace(r[0],r[1].bind(e)),e);return regexCache[e]=r?new RegExp(n,"i"):new RegExp(n)},isString=e=>"string"==typeof e,checkPattern=e=>e&&isString(e)&&!REGEX_TEST_BLANK_LINE.test(e)&&0!==e.indexOf("#"),splitPattern=e=>e.split(REGEX_SPLITALL_CRLF);class IgnoreRule{constructor(e,t,r,i){this.origin=e,this.pattern=t,this.negative=r,this.regex=i}}const createRule=(e,t)=>{const r=e;let i=!1;0===e.indexOf("!")&&(i=!0,e=e.substr(1)),e=e.replace(REGEX_REPLACE_LEADING_EXCAPED_EXCLAMATION,"!").replace(REGEX_REPLACE_LEADING_EXCAPED_HASH,"#");const n=makeRegex(e,0,t);return new IgnoreRule(r,e,i,n)},throwError=(e,t)=>{throw new t(e)},checkPath=(e,t,r)=>{if(!isString(e))return r(`path must be a string, but got \`${t}\``,TypeError);if(!e)return r("path must not be empty",TypeError);if(checkPath.isNotRelative(e)){return r(`path should be a ${"`path.relative()`d"} string, but got "${t}"`,RangeError)}return!0},isNotRelative=e=>REGEX_TEST_INVALID_PATH.test(e);checkPath.isNotRelative=isNotRelative,checkPath.convert=(e=>e);class Ignore{constructor({ignorecase:e=!0}={}){this._rules=[],this._ignorecase=e,define(this,KEY_IGNORE,!0),this._initCache()}_initCache(){this._ignoreCache=Object.create(null),this._testCache=Object.create(null)}_addPattern(e){if(e&&e[KEY_IGNORE])return this._rules=this._rules.concat(e._rules),void(this._added=!0);if(checkPattern(e)){const t=createRule(e,this._ignorecase);this._added=!0,this._rules.push(t)}}add(e){return this._added=!1,makeArray(isString(e)?splitPattern(e):e).forEach(this._addPattern,this),this._added&&this._initCache(),this}addPattern(e){return this.add(e)}_testOne(e,t){let r=!1,i=!1;return this._rules.forEach(n=>{const{negative:s}=n;i===s&&r!==i||s&&!r&&!i&&!t||n.regex.test(e)&&(r=!s,i=s)}),{ignored:r,unignored:i}}_test(e,t,r,i){const n=e&&checkPath.convert(e);return checkPath(n,e,throwError),this._t(n,t,r,i)}_t(e,t,r,i){if(e in t)return t[e];if(i||(i=e.split(SLASH)),i.pop(),!i.length)return t[e]=this._testOne(e,r);const n=this._t(i.join(SLASH)+SLASH,t,r,i);return t[e]=n.ignored?n:this._testOne(e,r)}ignores(e){return this._test(e,this._ignoreCache,!1).ignored}createFilter(){return e=>!this.ignores(e)}filter(e){return makeArray(e).filter(this.createFilter())}test(e){return this._test(e,this._testCache,!0)}}const factory=e=>new Ignore(e),returnFalse=()=>!1,isPathValid=e=>checkPath(e&&checkPath.convert(e),e,returnFalse);if(factory.isPathValid=isPathValid,factory.default=factory,module.exports=factory,"undefined"!=typeof process&&(process.env&&process.env.IGNORE_TEST_WIN32||"win32"===process.platform)){const e=e=>/^\\\\\?\\/.test(e)||/["<>|\u0000-\u001F]+/u.test(e)?e:e.replace(/\\/g,"/");checkPath.convert=e;const t=/^[a-z]:\//i;checkPath.isNotRelative=(e=>t.test(e)||isNotRelative(e))}

    // just paste here compressed code ^^^
    // just paste here compressed code ^^^
    // just paste here compressed code ^^^


    return module.exports;

}());

module.exports = ignoretool;